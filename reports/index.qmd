---
title: Technical Validation
---

```{r}
#| label: load
targets::tar_load(
  c(
    barcode_dist,
    monophyly_res,
    rbcl_seqs,
    trnlf_seqs,
    rbcl_seqs_no_hybrids,
    trnlf_seqs_no_hybrids,
    blast_test_res_raw),
  store = here::here("_targets/"))

source(here::here("R/packages.R"))
library(glue)
library(janitor)
library(ggtext)
```

```{r}
```{r}
#| label: gap-plot

n_intra_dist <- 
  barcode_dist %>%
  filter(comp_type == "intra") %>%
  pull(species_1) %>%
  n_distinct()

# Barcode gap plot
comp_cols <- palette.colors(n = 8, palette = "Okabe-Ito")[c("vermillion", "blue")] %>%
  set_names(c("inter", "intra"))

dist_plot <-
  dist_for_plot %>%
  filter(dataset %in% c("rbcl", "trnlf")) %>%
  ggplot(aes(x = dist, fill = comp_type)) +
  geom_histogram(position = "dodge", binwidth = 0.01) +
  facet_wrap(vars(dataset), scales = "free_y") +
  labs(
    x = "Distance",
    y = "Frequency",
    fill = "Type of distance"
  ) +
  scale_x_continuous(labels = scales::percent) +
  scale_fill_manual(
    values = comp_cols,
    breaks = c("inter", "intra"),
    labels = c("Interspecific", "Intraspecific")) +
  theme(
    legend.position = "bottom",
    strip.text = element_text(face = "italic"))

ggplot(dist_dot_plot_data, aes(x = intra_dist, y = inter_dist)) +
  geom_point()

ggsave(plot = dist_plot, file = here::here("results/dist_plot.pdf"))
```

```{r}
#| label: blast-test-stats

blast_res_totals <-
  blast_test_res_raw %>%
  mutate(result = if_else(fail, "Fail", "Pass")) %>%
  tabyl(result, dataset) %>%
  adorn_totals("row")

blast_res_perc <-
  blast_test_res_raw %>%
  mutate(result = if_else(fail, "Fail", "Pass")) %>%
  tabyl(result, dataset) %>%
  adorn_percentages("col") %>%
  rename_with(~paste0(.x, "_perc"), !matches("result")) %>%
  mutate(across(where(is.numeric), ~scales::percent(.x, 0.1)))

blast_res_table <-
  left_join(blast_res_totals, blast_res_perc, by = "result") %>%
  mutate(
    across(contains("_perc"), ~replace_na(.x, "100%")),
    rbcl = glue("{rbcl} ({rbcl_perc})"),
    rbcl_no_hybrids = glue("{rbcl_no_hybrids} ({rbcl_no_hybrids_perc})"),
    trnlf = glue("{trnlf} ({trnlf_perc})"),
    trnlf_no_hybrids = glue("{trnlf_no_hybrids} ({trnlf_no_hybrids_perc})"),
    rbcl_short = glue("{rbcl_short} ({rbcl_short_perc})"),
    rbcl_no_hybrids_short = glue("{rbcl_no_hybrids_short} ({rbcl_no_hybrids_short_perc})")
  ) %>%
  select(
    result, rbcl, rbcl_no_hybrids, rbcl_short,
    rbcl_no_hybrids_short, trnlf, trnlf_no_hybrids)

blast_res_long <- 
  blast_test_res_raw %>%
  group_by(dataset) %>%
  count(fail) %>%
  mutate(total = sum(n)) %>%
  ungroup() %>%
  mutate(perc = n / total) %>%
  mutate(perc = scales::percent(perc, 0.1))

blast_res_best <-
  blast_res_long %>%
  filter(fail == FALSE) %>%
  arrange(desc(perc))
```

Rates of successful identification in the BLAST test ranged from _ to _ by dataset.
